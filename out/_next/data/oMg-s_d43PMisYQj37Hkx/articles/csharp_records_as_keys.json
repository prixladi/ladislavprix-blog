{"pageProps":{"article":{"title":"C# records used as hash keys","metaDescription":"C# 9 records can be used as hash keys.","keywordText":"c# .net tech records","ogImageExtension":"png","brief":{"compiledSource":"var c=Object.defineProperty,l=Object.defineProperties;var D=Object.getOwnPropertyDescriptors;var a=Object.getOwnPropertySymbols;var s=Object.prototype.hasOwnProperty,p=Object.prototype.propertyIsEnumerable;var i=(e,n,t)=>n in e?c(e,n,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[n]=t,r=(e,n)=>{for(var t in n||(n={}))s.call(n,t)&&i(e,t,n[t]);if(a)for(var t of a(n))p.call(n,t)&&i(e,t,n[t]);return e},u=(e,n)=>l(e,D(n));var y=(e,n)=>{var t={};for(var o in e)s.call(e,o)&&n.indexOf(o)<0&&(t[o]=e[o]);if(e!=null&&a)for(var o of a(e))n.indexOf(o)<0&&p.call(e,o)&&(t[o]=e[o]);return t};const layoutProps={},MDXLayout=\"wrapper\";function MDXContent(t){var o=t,{components:e}=o,n=y(o,[\"components\"]);return mdx(MDXLayout,u(r(r({},layoutProps),n),{components:e,mdxType:\"MDXLayout\"}),mdx(\"p\",null,mdx(\"strong\",{parentName:\"p\"},\"C# 9\"),\" records can be easily used as hash keys in structures like \",mdx(\"inlineCode\",{parentName:\"p\"},\"IDictionary<TKey, TValue>\"),\".\"))}MDXContent.isMDXComponent=!0;\n","scope":{}},"createdAt":"2021-09-10","author":"Ladislav Prix","readingTimeInMinutes":1,"content":{"compiledSource":"var u=Object.defineProperty,m=Object.defineProperties;var d=Object.getOwnPropertyDescriptors;var i=Object.getOwnPropertySymbols;var s=Object.prototype.hasOwnProperty,o=Object.prototype.propertyIsEnumerable;var c=(e,t,a)=>t in e?u(e,t,{enumerable:!0,configurable:!0,writable:!0,value:a}):e[t]=a,r=(e,t)=>{for(var a in t||(t={}))s.call(t,a)&&c(e,a,t[a]);if(i)for(var a of i(t))o.call(t,a)&&c(e,a,t[a]);return e},p=(e,t)=>m(e,d(t));var l=(e,t)=>{var a={};for(var n in e)s.call(e,n)&&t.indexOf(n)<0&&(a[n]=e[n]);if(e!=null&&i)for(var n of i(e))t.indexOf(n)<0&&o.call(e,n)&&(a[n]=e[n]);return a};const layoutProps={},MDXLayout=\"wrapper\";function MDXContent(a){var n=a,{components:e}=n,t=l(n,[\"components\"]);return mdx(MDXLayout,p(r(r({},layoutProps),t),{components:e,mdxType:\"MDXLayout\"}),mdx(\"p\",null,\"New \",mdx(\"strong\",{parentName:\"p\"},\"C# 9\"),\" feature \",mdx(\"a\",r({parentName:\"p\"},{href:\"https://docs.microsoft.com/dotnet/csharp/whats-new/tutorials/records\"}),\"records\"),\" can easily be used as key in \",mdx(\"em\",{parentName:\"p\"},\"hash\"),\" structures such as \",mdx(\"inlineCode\",{parentName:\"p\"},\"IDictionary<TKey, TValue>\"),\", thanks to them by default implementing \",mdx(\"inlineCode\",{parentName:\"p\"},\"IEquatable<>\"),\". Of course \",mdx(\"strong\",{parentName:\"p\"},\"classes\"),\" can be used as keys too but you either compare by reference, which is not desirable in many cases, or you need to implement \",mdx(\"inlineCode\",{parentName:\"p\"},\"IEquatable<>\"),\" by yourself.\"),mdx(\"h2\",null,\"Example\"),mdx(\"pre\",null,mdx(\"code\",r({parentName:\"pre\"},{className:\"language-csharp\"}),`public record Key \n{\n    public string Title { get; init; }\n    public string Batch { get; init; }\n}\n\nvar distinctArticles = new HashSet<Key>();\n\nforeach(var article in articles)\n    distinctArticles.Add(new Key \n    { \n        Title = article.Title, \n        Batch = article.Batch  \n    });\n`)))}MDXContent.isMDXComponent=!0;\n","scope":{}},"id":"csharp_records_as_keys"},"settings":{"title":"Ladislav Prix | blog","footer":{"compiledSource":"var y=Object.defineProperty,l=Object.defineProperties;var m=Object.getOwnPropertyDescriptors;var p=Object.getOwnPropertySymbols;var e=Object.prototype.hasOwnProperty,i=Object.prototype.propertyIsEnumerable;var c=(t,o,a)=>o in t?y(t,o,{enumerable:!0,configurable:!0,writable:!0,value:a}):t[o]=a,r=(t,o)=>{for(var a in o||(o={}))e.call(o,a)&&c(t,a,o[a]);if(p)for(var a of p(o))i.call(o,a)&&c(t,a,o[a]);return t},s=(t,o)=>l(t,m(o));var u=(t,o)=>{var a={};for(var n in t)e.call(t,n)&&o.indexOf(n)<0&&(a[n]=t[n]);if(t!=null&&p)for(var n of p(t))o.indexOf(n)<0&&i.call(t,n)&&(a[n]=t[n]);return a};const layoutProps={},MDXLayout=\"wrapper\";function MDXContent(a){var n=a,{components:t}=n,o=u(n,[\"components\"]);return mdx(MDXLayout,s(r(r({},layoutProps),o),{components:t,mdxType:\"MDXLayout\"}),mdx(\"p\",null,\"Copyright 2021 \\xA9 \",mdx(\"a\",r({parentName:\"p\"},{href:\"mailto:contact@ladislavprix.cz\"}),\"Ladislav Prix\")))}MDXContent.isMDXComponent=!0;\n","scope":{}}},"seoProps":{"title":"C# records used as hash keys","metaDescription":"C# 9 records can be used as hash keys.","metaKeywords":"c# .net tech records","ogTitle":"C# records used as hash keys","ogDescription":"C# 9 records can be used as hash keys.","ogImage":"https:/blog.ladislavprix.cz/assets/pages/csharp_records_as_keys.png","ogUrl":"https:/blog.ladislavprix.cz/articles/csharp_records_as_keys","ogSiteName":"Ladislav Prix | blog"}},"__N_SSG":true}